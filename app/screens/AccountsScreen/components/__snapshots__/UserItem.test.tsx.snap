// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserItem /> renders correctly when item data is correctly 1`] = `
<View
  collapsable={false}
  forwardedRef={[Function]}
  handlerTag={1}
  handlerType="PanGestureHandler"
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onLayout={[Function]}
  style={
    {
      "overflow": "hidden",
    }
  }
>
  <View
    collapsable={false}
    style={
      {
        "bottom": 0,
        "flexDirection": "row-reverse",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "transform": [
          {
            "translateX": -10000,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "#BBC3CF",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            [
              {
                "paddingHorizontal": 16,
                "paddingVertical": 12,
              },
              {
                "backgroundColor": "#C5281C",
                "paddingHorizontal": 12,
                "paddingVertical": 12,
              },
            ],
            {
              "alignItems": "center",
              "backgroundColor": "#A1ABBB",
              "justifyContent": "center",
            },
            false,
            false,
          ]
        }
      >
        <View
          style={
            [
              [
                {
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "marginStart": 4,
                  "textAlign": "center",
                  "zIndex": 2,
                },
                {
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.15,
                  "lineHeight": 20,
                },
                {
                  "color": "#FFFFFF",
                },
              ],
              undefined,
              false,
              false,
            ]
          }
        >
          <Text
            preset="body02"
            style={
              [
                {},
                {
                  "color": "#FFFFFF",
                },
                {
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                {
                  "flexWrap": "wrap",
                  "overflow": "hidden",
                },
              ]
            }
          >
            Allow admin
          </Text>
        </View>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            [
              {
                "paddingHorizontal": 16,
                "paddingVertical": 12,
              },
              {
                "backgroundColor": "#C5281C",
                "paddingHorizontal": 12,
                "paddingVertical": 12,
              },
            ],
            {
              "alignItems": "center",
              "backgroundColor": "#339633",
              "justifyContent": "center",
            },
            false,
            false,
          ]
        }
      >
        <View
          style={
            [
              [
                {
                  "flexGrow": 0,
                  "flexShrink": 1,
                  "marginStart": 4,
                  "textAlign": "center",
                  "zIndex": 2,
                },
                {
                  "fontFamily": "System",
                  "fontSize": 14,
                  "fontWeight": "600",
                  "letterSpacing": 0.15,
                  "lineHeight": 20,
                },
                {
                  "color": "#FFFFFF",
                },
              ],
              undefined,
              false,
              false,
            ]
          }
        >
          <Text
            preset="body02"
            style={
              [
                {},
                {
                  "color": "#FFFFFF",
                },
                {
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "400",
                  "letterSpacing": 0.15,
                  "lineHeight": 24,
                },
                {
                  "flexWrap": "wrap",
                  "overflow": "hidden",
                },
              ]
            }
          >
            Active
          </Text>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
    />
  </View>
  <View
    collapsable={false}
    forwardedRef={[Function]}
    handlerTag={2}
    handlerType="TapGestureHandler"
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    pointerEvents="auto"
    style={
      {
        "transform": [
          {
            "translateX": -0,
          },
        ],
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderBottomColor": "#E5E8ED",
          "borderBottomWidth": 1,
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <Text
          preset="body03"
          style={
            [
              {},
              {
                "color": "#000F27",
              },
              {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "600",
                "letterSpacing": 0.15,
                "lineHeight": 20,
              },
              {
                "minWidth": 75,
              },
            ]
          }
        >
          Full name:
        </Text>
        <View
          style={
            [
              {
                "flexGrow": 0,
                "flexShrink": 0,
              },
              false,
              {
                "width": 12,
              },
              undefined,
            ]
          }
        />
        <Text
          preset="body03"
          style={
            [
              {},
              {
                "color": "#000F27",
              },
              {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "600",
                "letterSpacing": 0.15,
                "lineHeight": 20,
              },
              {
                "flexWrap": "wrap",
                "overflow": "hidden",
              },
            ]
          }
        >
          FULL NAME
        </Text>
      </View>
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <Text
          preset="support01"
          style={
            [
              {},
              {
                "color": "#000F27",
              },
              {
                "fontFamily": "System",
                "fontSize": 12,
                "fontWeight": "400",
                "letterSpacing": 0.25,
                "lineHeight": 16,
              },
              {
                "minWidth": 75,
              },
            ]
          }
        >
          Username:
        </Text>
        <View
          style={
            [
              {
                "flexGrow": 0,
                "flexShrink": 0,
              },
              false,
              {
                "width": 12,
              },
              undefined,
            ]
          }
        />
        <Text
          preset="support01"
          style={
            [
              {},
              {
                "color": "#000F27",
              },
              {
                "fontFamily": "System",
                "fontSize": 12,
                "fontWeight": "400",
                "letterSpacing": 0.25,
                "lineHeight": 16,
              },
              {
                "flexWrap": "wrap",
                "overflow": "hidden",
              },
            ]
          }
        >
          GVL00000
        </Text>
      </View>
      <View
        style={
          {
            "flex": 1,
            "flexDirection": "row",
            "overflow": "hidden",
          }
        }
      >
        <Text
          preset="support01"
          style={
            [
              {},
              {
                "color": "#000F27",
              },
              {
                "fontFamily": "System",
                "fontSize": 12,
                "fontWeight": "400",
                "letterSpacing": 0.25,
                "lineHeight": 16,
              },
              {
                "minWidth": 75,
              },
            ]
          }
        >
          Email:
        </Text>
        <View
          style={
            [
              {
                "flexGrow": 0,
                "flexShrink": 0,
              },
              false,
              {
                "width": 12,
              },
              undefined,
            ]
          }
        />
        <Text
          preset="support01"
          style={
            [
              {},
              {
                "color": "#000F27",
              },
              {
                "fontFamily": "System",
                "fontSize": 12,
                "fontWeight": "400",
                "letterSpacing": 0.25,
                "lineHeight": 16,
              },
              {
                "flexWrap": "wrap",
                "overflow": "hidden",
              },
            ]
          }
        >
          test@gmail.com
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`<UserItem /> renders correctly when item is empty 1`] = `null`;
